/*!
 * zoomist.js v1.0.0
 * https://github.com/cotton123236/zoomist#readme
 *
 * Copyright 2021-present Wilson Wu
 * Released under the MIT license
 *
 * Date: 2021-10-31T08:29:56.249Z
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Zoomist=e()}(this,(function(){"use strict";var t={src:"data-zoomist-src",mousewheel:!0};const e="zoomist";const o=t=>null!==i(t),i=t=>t instanceof HTMLElement?t:document.querySelector(t),s=(t,e)=>t[e]||t.style[e]||window.getComputedStyle(t).getPropertyValue(e);return class{constructor(e,s={}){if(!e)throw new Error("The first argument is required.");if(!o(e))throw new Error("This element is not exist.");this.element=i(e),this.options=Object.assign({},t,(t=>{if(!(t=>"object"==typeof t&&null!==t)(t))return!1;try{const{constructor:e}=t,{prototype:o}=e,{hasOwnProperty:i}=Object.prototype;return e&&o&&i.call(o,"isPrototypeOf")}catch(t){return!1}})(s)&&s),this.init()}init(){const{element:o,options:i}=this;if(o[e])return;o[e]=this;const s=i.src="string"==typeof(n=i.src)&&""!==n?i.src:t.src;var n;const r=o.getAttribute(s);this.create(r)}create(t){if(!t)return;const{element:e}=this,{offsetWidth:n,offsetHeight:r}=e;var c;this.url=t,this.style={},this.style.container={width:n,height:r,ratio:n/r,position:"static"===s(e,"position")?"relative":s(e,"position"),top:s(e,"top"),left:s(e,"left"),right:s(e,"right"),bottom:s(e,"bottom")},o(c=e)&&"IMG"===i(c).tagName?e.onload=()=>{const{offsetWidth:t,offsetHeight:o}=e;this.style.container.width=t,this.style.container.height=o,this.mount()}:this.mount()}mount(){if(this.mounted)return;const{style:t}=this,{position:e,top:o,left:i,right:s,bottom:n,width:r,height:c}=t.container,h=document.createElement("div");h.innerHTML=(t=>{const{url:e,style:o}=t;return`\n  <div class="zoomist-wrapper">\n    <img class="zoomist-image" src="${e}" />\n  </div>\n  `})(this),h.classList.add("zoomist-container"),((t,e)=>{for(const[i,s]of Object.entries(e))t.style[i]="number"!=typeof(o=s)||isNaN(o)?s:`${s}px`;var o})(h,{position:e,top:o,left:i,right:s,bottom:n,width:r,height:c}),this.container=h,this.wrapper=h.querySelector(".zoomist-wrapper"),this.image=h.querySelector(".zoomist-image"),this.mounted=!0,this.render()}render(){const{element:t,container:e}=this;t.classList.add("zoomist-hide"),t.parentNode.insertBefore(e,t.nextSibling)}}}));
